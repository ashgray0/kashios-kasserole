#include "daisy_pod.h"
#include "daisysp.h"

using namespace daisy;
using namespace daisysp;

DaisyPod    pod;
PDWavetable wt1;
Parameter   knob1_param, knob2_param;

//This program creates a polyphonic synthesizer based on the "Phase Distortion"
//algorithm used in the Casio CZ-101, but with the modulation generated by a
//wavetable oscillator rather than by a function of several vectors.

void AudioCallback(float **in, float **out, size_t size)
{
    float wt1_freq;
    float wt1_bend_ratio;

    wt1_freq = mtof(knob1_param.Process());
    wt1.SetFreq(wt1_freq);

    wt1_bend_ratio = knob2_param.Process();
    wt1.SetBendRatio(wt1_bend_ratio);

    for(size_t i = 0; i < size; i++)
    { 
        out[0][i] = out[1][i] = osc1.Process();
    }
}

int main(void)
{
    float sample_rate;
    float wt1_amp;

    wt1_amp = 0.5f;

    pod.Init();
    sample_rate = pod.AudioSampleRate();
    
    knob1_param.Init(pod.knob1, 0, 127, Parameter::LINEAR);
    knob2_param.Init(pod.knob2, 0, 1, Parameter::LINEAR);

    wt1.Init(sample_rate);
    wt1.SetAmp(wt1_amp);

    pod.StartAdc();
    pod.StartAudio(AudioCallback);

    while(1) {}
}
